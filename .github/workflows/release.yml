name: Release and Publish to Marketplace

on:
  push:
    tags:
      - 'v*.*.*'  # Triggers on version tags like v1.0.0, v2.1.3, etc.

permissions:
  contents: write
  packages: write
  issues: write
  pull-requests: write

jobs:
  release:
    runs-on: ubuntu-latest
    outputs:
      marketplace-ready: ${{ steps.marketplace-check.outputs.marketplace-ready }}
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Extract version from tag
      id: version
      run: |
        TAG_NAME=${GITHUB_REF#refs/tags/}
        echo "version=$TAG_NAME" >> $GITHUB_OUTPUT
        echo "version_number=${TAG_NAME#v}" >> $GITHUB_OUTPUT
    
    - name: Verify action.yml exists
      run: |
        if [ ! -f action.yml ]; then
          echo "Error: action.yml not found"
          exit 1
        fi
        echo "‚úÖ action.yml found"
    
    - name: Test action locally
      run: |
        echo "Testing Docker image build..."
        docker build -t ssh-action-test .
        echo "‚úÖ Docker image built successfully"
    
    - name: Generate release notes
      run: |
        echo "## SSH Remote Script Executor ${{ steps.version.outputs.version }}" > release_notes.md
        echo "" >> release_notes.md
        echo "### Features" >> release_notes.md
        echo "- Execute scripts on remote hosts via SSH" >> release_notes.md
        echo "- Support for custom SSH ports" >> release_notes.md
        echo "- Password-based authentication" >> release_notes.md
        echo "- Environment variables support" >> release_notes.md
        echo "- Comprehensive error handling" >> release_notes.md
        echo "" >> release_notes.md
        echo "### Usage" >> release_notes.md
        echo "" >> release_notes.md
        echo '```yaml' >> release_notes.md
        echo "- name: Execute remote script" >> release_notes.md
        echo "  uses: ${{ github.repository }}@${{ steps.version.outputs.version }}" >> release_notes.md
        echo "  with:" >> release_notes.md
        echo '    host: ${{ secrets.SERVER_HOST }}' >> release_notes.md
        echo '    username: ${{ secrets.SERVER_USER }}' >> release_notes.md
        echo '    password: ${{ secrets.SERVER_PASSWORD }}' >> release_notes.md
        echo "    script: |" >> release_notes.md
        echo '      echo "Hello from remote server!"' >> release_notes.md
        echo '```' >> release_notes.md
        echo "" >> release_notes.md
        echo "See [README.md](README.md) for complete documentation." >> release_notes.md
    
    - name: Create GitHub Release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        gh release create ${{ steps.version.outputs.version }} \
          --title "SSH Remote Script Executor ${{ steps.version.outputs.version }}" \
          --notes-file release_notes.md \
          --latest
    
    - name: Validate Marketplace Requirements
      id: marketplace-check
      run: |
        echo "üîç Validating GitHub Marketplace requirements..."
        
        REPO_VISIBILITY=$(gh repo view ${{ github.repository }} --json visibility --jq '.visibility')
        if [ "$REPO_VISIBILITY" != "public" ]; then
          echo "‚ö†Ô∏è  Repository is private - marketplace publication not possible"
          echo "MARKETPLACE_READY=false" >> $GITHUB_ENV
          echo "marketplace-ready=false" >> $GITHUB_OUTPUT
        else
          echo "‚úÖ Repository is public"
          echo "MARKETPLACE_READY=true" >> $GITHUB_ENV
          echo "marketplace-ready=true" >> $GITHUB_OUTPUT
        fi
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Marketplace Publication Info
      run: |
        echo "üéâ Release created successfully!"
        echo "üì¶ Version: ${{ steps.version.outputs.version }}"
        echo "üîó Release URL: https://github.com/${{ github.repository }}/releases/tag/${{ steps.version.outputs.version }}"
        
        if [ "$MARKETPLACE_READY" = "true" ]; then
          echo "‚úÖ Repository is ready for marketplace publication"
          echo "üè™ Go to https://github.com/${{ github.repository }} to publish to marketplace"
        else
          echo "‚ö†Ô∏è  Repository is private - make it public to enable marketplace publication"
        fi
        
  # Job to create/update major version tag (e.g., v1, v2)
  update-major-tag:
    runs-on: ubuntu-latest
    needs: release
    if: (github.event_name == 'push') && startsWith(github.ref, 'refs/tags/v')
    
    permissions:
      contents: write
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Extract major version
      id: major_version
      run: |
        TAG_NAME=${GITHUB_REF#refs/tags/}
        MAJOR_VERSION=$(echo $TAG_NAME | cut -d. -f1)
        echo "major_version=$MAJOR_VERSION" >> $GITHUB_OUTPUT
        echo "tag_name=$TAG_NAME" >> $GITHUB_OUTPUT
        echo "Extracted major version: $MAJOR_VERSION from tag: $TAG_NAME"
    
    - name: Update major version tag
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        git config user.name "GitHub Actions"
        git config user.email "actions@github.com"
        
        echo "üè∑Ô∏è  Updating major version tag: ${{ steps.major_version.outputs.major_version }}"
        
        git tag -d ${{ steps.major_version.outputs.major_version }} 2>/dev/null || echo "Local tag doesn't exist"
        git push origin :refs/tags/${{ steps.major_version.outputs.major_version }} 2>/dev/null || echo "Remote tag doesn't exist"
        
        git tag ${{ steps.major_version.outputs.major_version }}
        git push origin ${{ steps.major_version.outputs.major_version }}
        
        echo "‚úÖ Updated major version tag: ${{ steps.major_version.outputs.major_version }}"
        echo "üéØ Users can now use: uses: ${{ github.repository }}@${{ steps.major_version.outputs.major_version }}"
        
  # Job to create marketplace publication tracking issue
  create-marketplace-issue:
    runs-on: ubuntu-latest
    needs: [release, update-major-tag]
    if: (github.event_name == 'push') && startsWith(github.ref, 'refs/tags/v') && (needs.release.outputs.marketplace-ready == 'true')
    
    permissions:
      contents: write
      issues: write
    
    steps:
    - name: Extract version from tag
      id: version
      run: |
        TAG_NAME=${GITHUB_REF#refs/tags/}
        echo "version=$TAG_NAME" >> $GITHUB_OUTPUT
    
    - name: Create Marketplace Publication Issue
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        EXISTING_ISSUE=$(gh issue list --repo ${{ github.repository }} --state open --search "Publish ${{ steps.version.outputs.version }} to GitHub Marketplace" --json number --jq '.[0].number' || echo "")
        
        if [ -n "$EXISTING_ISSUE" ] && [ "$EXISTING_ISSUE" != "null" ]; then
          echo "üìù Issue already exists for this release: #$EXISTING_ISSUE"
          exit 0
        fi
        
        gh issue create \
          --repo ${{ github.repository }} \
          --title "Publish ${{ steps.version.outputs.version }} to GitHub Marketplace" \
          --assignee ${{ github.actor }} \
          --label "marketplace,release" \
          --body "Release ${{ steps.version.outputs.version }} is ready for marketplace publication. Please visit the repository to publish to GitHub Marketplace."
        
        echo "üìù Created marketplace publication tracking issue"
